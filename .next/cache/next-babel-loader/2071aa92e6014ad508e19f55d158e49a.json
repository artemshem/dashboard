{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Work\\\\Projects\\\\dashboard\\\\src\\\\pages\\\\main.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { topData, bottomData } from '../config';\nimport InfoLine from '../components/main-page-components/info-line/info-line';\nimport UserScrollList from '../components/main-page-components/users-scroll-list/users-scroll-list';\nimport { Chart } from \"react-google-charts\";\nvar data = [[\"Year\", \"Sales\", \"Expenses\"], [\"2004\", 1000, 400], [\"2005\", 1170, 460], [\"2006\", 660, 1120], [\"2007\", 1030, 540]];\nvar options = {\n  title: \"Company Performance\",\n  curveType: \"function\",\n  legend: {\n    position: \"bottom\"\n  }\n};\n\nvar Main = /*#__PURE__*/function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      // if( typeof(window) !== 'undefined') {\n      //   console.log(window.innerWidth);\n      // }\n      return __jsx(\"div\", {\n        className: \"main-page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"info-block info-block_top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, __jsx(InfoLine, {\n        data: topData,\n        grid: 'col-12 col-md-6 col-lg-4 col-xl-3',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"info-block info-block_left col-12 col-xl-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"info-item info-item_chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, __jsx(Chart, {\n        chartType: \"LineChart\",\n        data: data,\n        options: options,\n        width: \"100%\",\n        height: \"100%\",\n        legendToggle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      })), __jsx(InfoLine, {\n        data: bottomData,\n        grid: 'col-12 col-md-6 col-xl-6',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      })), __jsx(UserScrollList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }), __jsx(\"div\", {\n        className: \"info-item info-item_tall col-12 col-md-6 col-lg-6 col-xl-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"info-item-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, \" \"))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["E:/Work/Projects/dashboard/src/pages/main.tsx"],"names":["React","Component","topData","bottomData","InfoLine","UserScrollList","Chart","data","options","title","curveType","legend","position","Main"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,WAAlC;AAEA,OAAOC,QAAP,MAAqB,wDAArB;AACA,OAAOC,cAAP,MAA2B,wEAA3B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,IAAMC,IAAI,GAAG,CACX,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,CADW,EAEX,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,CAFW,EAGX,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,CAHW,EAIX,CAAC,MAAD,EAAS,GAAT,EAAc,IAAd,CAJW,EAKX,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,CALW,CAAb;AAQA,IAAIC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE,qBADK;AAEZC,EAAAA,SAAS,EAAE,UAFC;AAGZC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ;AAHI,CAAd;;IAMMC,I;;;;;;;;;;;;;6BAEK;AAEP;AACA;AACA;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAU,QAAA,IAAI,EAAEX,OAAhB;AAAyB,QAAA,IAAI,EAAE,mCAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,MAAC,KAAD;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,IAAI,EAAEK,IAFR;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,MAAM,EAAC,MALT;AAME,QAAA,YAAY,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF,EAWE,MAAC,QAAD;AAAU,QAAA,IAAI,EAAEL,UAAhB;AAA4B,QAAA,IAAI,EAAE,0BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF,EAcI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI;AAAK,QAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAfJ,CAJF,CADF;AA0BD;;;;EAlCgBF,S;;AAqCnB,eAAeY,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport {topData, bottomData} from '../config';\nimport API from '../api/api';\nimport InfoLine from '../components/main-page-components/info-line/info-line';\nimport UserScrollList from '../components/main-page-components/users-scroll-list/users-scroll-list';\nimport { Chart } from \"react-google-charts\";\n\nconst data = [\n  [\"Year\", \"Sales\", \"Expenses\"],\n  [\"2004\", 1000, 400],\n  [\"2005\", 1170, 460],\n  [\"2006\", 660, 1120],\n  [\"2007\", 1030, 540]\n] as Array<any>;\n\nlet options = {\n  title: \"Company Performance\",\n  curveType: \"function\",\n  legend: { position: \"bottom\" }\n} as object;\n\nclass Main extends Component<any, any> {\n  \n  render() {\n\n    // if( typeof(window) !== 'undefined') {\n    //   console.log(window.innerWidth);\n    // }\n\n    return (\n      <div className=\"main-page\">\n        <div className=\"info-block info-block_top\">\n          <InfoLine data={topData} grid={'col-12 col-md-6 col-lg-4 col-xl-3'} />\n        </div>\n        <div className=\"row\">\n          <div className=\"info-block info-block_left col-12 col-xl-6\">\n            <div className=\"info-item info-item_chart\">\n            <Chart\n              chartType=\"LineChart\"\n              data={data}\n              options={options}\n              width=\"100%\"\n              height=\"100%\"\n              legendToggle\n            />  \n            </div>\n            <InfoLine data={bottomData} grid={'col-12 col-md-6 col-xl-6'} />\n          </div>\n            <UserScrollList />\n            <div className=\"info-item info-item_tall col-12 col-md-6 col-lg-6 col-xl-3\">\n              <div className=\"info-item-inner\"> </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}