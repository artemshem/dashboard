{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\Projects\\\\dashboard\\\\src\\\\pages\\\\monitoring.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\n\nclass Monitoring extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      let example = document.getElementById(\"example\"),\n          let = example.getContext('2d');\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, __jsx(\"canvas\", {\n      id: \"example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\"));\n  }\n\n}\n\nexport default Monitoring;","map":{"version":3,"sources":["E:/Work/Projects/dashboard/src/pages/monitoring.tsx"],"names":["React","Component","Monitoring","example","document","getElementById","let","getContext","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,MAAMC,UAAN,SAAyBD,SAAzB,CAA6C;AAAA;AAAA;;AAAA,+CAEvB,MAAM;AACxB,UAAIE,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AAAA,UACAC,GAAG,GAAGH,OAAO,CAACI,UAAR,CAAmB,IAAnB,CADN;AAED,KAL0C;AAAA;;AAO3CC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGADF,CADF;AAKD;;AAd0C;;AAiB7C,eAAeN,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { logout } from '../redux/actions';\nimport store from '../redux/store';\n\nclass Monitoring extends Component<any, any> {\n\n  componentDidMount = () => {\n    let example = document.getElementById(\"example\"),\n    let = example.getContext('2d');\n  }\n\n  render() {\n\n    return (\n      <div className=\"container-fluid\">\n        <canvas id='example'>Обновите браузер</canvas>\n      </div>\n    )\n  }\n}\n\nexport default Monitoring;"]},"metadata":{},"sourceType":"module"}