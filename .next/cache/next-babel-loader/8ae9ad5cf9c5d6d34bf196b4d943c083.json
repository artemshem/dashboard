{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\Projects\\\\test-app\\\\src\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport Header from '../components/header/header';\nimport Sidebar from '../components/sidebar/sidebar';\nimport Loader from '../components/loader/loader';\nimport Login from './login';\nimport '../styles/index.scss';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\nimport { autologin } from '../redux/actions';\nimport { capitalize } from '../utils/commonUtils';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      logged: false\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      if (false) {\n        const myStorage = window.localStorage;\n        const logged = JSON.parse(myStorage.getItem('logged'));\n        this.setState({\n          logged\n        });\n\n        if (logged) {\n          store.dispatch(autologin());\n        }\n      }\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      router\n    } = this.props;\n    const {\n      logged\n    } = this.state;\n    let path = router.pathname.slice(1, router.pathname.length) || 'Main';\n\n    if (!logged) {\n      return __jsx(Login, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      httpEquiv: \"expires\",\n      content: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      href: \"/img/admin.ico\",\n      type: \"image/png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \" \", capitalize(path), \" - Dashboard \")), __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, __jsx(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }), __jsx(Loader, {\n      Component: Component,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Work/Projects/test-app/src/pages/_app.tsx"],"names":["React","Component","Head","Header","Sidebar","Loader","Login","Provider","store","autologin","capitalize","App","logged","myStorage","window","localStorage","JSON","parse","getItem","setState","dispatch","render","router","props","state","path","pathname","slice","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,sBAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAAsC;AAAA;AAAA;;AAAA,mCAC5B;AACNW,MAAAA,MAAM,EAAE;AADF,KAD4B;;AAAA,+CAKhB,MAAM;AACxB,iBAAmC;AACjC,cAAMC,SAAc,GAAGC,MAAM,CAACC,YAA9B;AACA,cAAMH,MAAe,GAAGI,IAAI,CAACC,KAAL,CAAWJ,SAAS,CAACK,OAAV,CAAkB,QAAlB,CAAX,CAAxB;AACA,aAAKC,QAAL,CAAc;AAAEP,UAAAA;AAAF,SAAd;;AACA,YAAIA,MAAJ,EAAY;AACVJ,UAAAA,KAAK,CAACY,QAAN,CAAeX,SAAS,EAAxB;AACD;AACF;AACF,KAdmC;AAAA;;AAgBpCY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,SAAF;AAAaqB,MAAAA;AAAb,QAAwB,KAAKC,KAAnC;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAa,KAAKY,KAAxB;AACA,QAAIC,IAAY,GAAGH,MAAM,CAACI,QAAP,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBL,MAAM,CAACI,QAAP,CAAgBE,MAAzC,KAAoD,MAAvE;;AAEA,QAAI,CAAChB,MAAL,EAAa;AACX,aAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAM,MAAA,GAAG,EAAC,eAAV;AAA0B,MAAA,IAAI,EAAC,gBAA/B;AAAgD,MAAA,IAAI,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASF,UAAU,CAACe,IAAD,CAAnB,kBAHF,CADF,EAME,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEjB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAEP,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF,CANF,CADF;AAkBD;;AA3CmC;;AA+CtC,eAAeU,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Head from 'next/head';\nimport Header from '../components/header/header';\nimport Sidebar from '../components/sidebar/sidebar';\nimport Loader from '../components/loader/loader';\nimport Login from './login';\nimport '../styles/index.scss';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\nimport { autologin } from '../redux/actions';\nimport { capitalize } from '../utils/commonUtils';\n\nclass App extends Component<any, any> {\n  state = {\n    logged: false,\n  }\n\n  componentDidMount = () => {\n    if (typeof window !== 'undefined') {\n      const myStorage: any = window.localStorage;\n      const logged: boolean = JSON.parse(myStorage.getItem('logged'));\n      this.setState({ logged });\n      if (logged) {\n        store.dispatch(autologin());\n      }\n    }\n  }\n\n  render() {\n    const { Component, router } = this.props;\n    const { logged } = this.state;\n    let path: string = router.pathname.slice(1, router.pathname.length) || 'Main';\n\n    if (!logged) {\n      return <Login />\n    }\n\n    return (\n      <div className=\"app\">\n        <Head>\n          <meta httpEquiv=\"expires\" content=\"0\" />\n          <link rel=\"shortcut icon\" href=\"/img/admin.ico\" type=\"image/png\" />\n          <title> {capitalize(path)} - Dashboard </title>\n        </Head>\n        <Provider store={store}>\n          <div className=\"main\">\n            <Sidebar />\n            <div className=\"content-container\">\n              <Header />\n              <Loader Component={Component} />\n            </div>\n          </div>\n        </Provider>\n      </div>\n    )\n  }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}