{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\Projects\\\\test-app\\\\src\\\\pages\\\\news.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport API from '../utils/api';\n\nclass News extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      articles: []\n    });\n\n    _defineProperty(this, \"api\", new API());\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.api.getNews().then(response => {\n        return response.json();\n      }).then(el => {\n        this.setState({\n          articles: el.articles\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      articles\n    } = this.state;\n    console.log(articles);\n    return __jsx(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"articles-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, articles.map((item, index) => {\n      return __jsx(Article, _extends({}, item, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default News;\n\nconst Article = ({\n  title,\n  url,\n  urlToImage,\n  publishedAt,\n  content,\n  author\n}) => {\n  return __jsx(\"div\", {\n    className: \"article-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"article-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, urlToImage && __jsx(\"img\", {\n    src: urlToImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"article-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"article-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"span\", {\n    className: \"article-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, content), __jsx(\"span\", {\n    className: \"article-author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, author)));\n};","map":{"version":3,"sources":["E:/Work/Projects/test-app/src/pages/news.jsx"],"names":["React","Component","API","News","articles","api","getNews","then","response","json","el","setState","render","state","console","log","map","item","index","Article","title","url","urlToImage","publishedAt","content","author"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;;AAAA,mCACnB;AACNG,MAAAA,QAAQ,EAAE;AADJ,KADmB;;AAAA,iCAKrB,IAAIF,GAAJ,EALqB;;AAAA,+CAOP,MAAM;AACxB,WAAKG,GAAL,CAASC,OAAT,GACGC,IADH,CACQC,QAAQ,IAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQG,EAAE,IAAI;AACV,aAAKC,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAEM,EAAE,CAACN;AAAf,SAAd;AACD,OANH;AAOD,KAf0B;AAAA;;AAiB3BQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAe,KAAKS,KAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,aACE,MAAC,OAAD,eAAaD,IAAb;AAAmB,QAAA,GAAG,EAAEC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD,KAJA,CADH,CADF,CADF;AAWD;;AA/B0B;;AAkC7B,eAAef,IAAf;;AAEA,MAAMgB,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,GAAT;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA,WAA1B;AAAuCC,EAAAA,OAAvC;AAAgDC,EAAAA;AAAhD,CAAD,KAA8D;AAC5E,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,IACT;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,EAME;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OADH,CAJF,EAOE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MADH,CAPF,CANF,CADF;AAoBD,CArBD","sourcesContent":["import React, { Component } from 'react';\nimport API from '../utils/api';\n\nclass News extends Component {\n  state = {\n    articles: [],\n  }\n\n  api = new API();\n\n  componentDidMount = () => {\n    this.api.getNews()\n      .then(response => {\n        return response.json();\n      })\n      .then(el => {\n        this.setState({ articles: el.articles })\n      });\n  }\n\n  render() {\n    const { articles } = this.state;\n    console.log(articles);\n    return (\n      <div className=\"main-container\">\n        <div className=\"articles-list\">\n          {articles.map((item, index) => {\n            return (\n              <Article {...item} key={index} />\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default News;\n\nconst Article = ({ title, url, urlToImage, publishedAt, content, author }) => {\n  return (\n    <div className=\"article-body\">\n      <div className=\"article-left\">\n        {urlToImage &&\n          <img src={urlToImage} />\n        }\n      </div>\n      <div className=\"article-right\">\n        <span className=\"article-title\">\n          {title}\n        </span>\n        <span className=\"article-content\">\n          {content}\n        </span>\n        <span className=\"article-author\">\n          {author}\n        </span>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}